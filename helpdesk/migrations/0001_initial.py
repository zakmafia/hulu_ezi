# Generated by Django 4.1.5 on 2023-02-13 10:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Issue')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeCategory',
            fields=[
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name': 'knowledge category',
                'verbose_name_plural': 'knowledge categories',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Priority')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name': 'priority',
                'verbose_name_plural': 'priorities',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Role')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.role')),
            ],
            options={
                'verbose_name': 'staff',
                'verbose_name_plural': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Status Name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name': 'status',
                'verbose_name_plural': 'statuses',
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Weight Name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('is_other_issue', models.BooleanField(default=False, verbose_name='Is Other Issue')),
                ('other_issue', models.CharField(blank=True, max_length=50, verbose_name='Other Issue')),
                ('issue_description', models.TextField(blank=True, max_length=255, verbose_name='Issue Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='photos/user_requests', verbose_name='Image')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='helpdesk.issue')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('task', models.CharField(max_length=255, verbose_name='Task')),
                ('allocated_date', models.DateField(verbose_name='Allocated Date')),
                ('deadline', models.DateField(verbose_name='Deadline Date')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('assigned_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='helpdesk.staff')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.priority')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.status')),
                ('weight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='helpdesk.weight')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('docfile', models.FileField(upload_to='documents/%Y/%m/%d')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.knowledgecategory')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='assigned_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='helpdesk.staff'),
        ),
        migrations.AddField(
            model_name='issue',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpdesk.priority'),
        ),
    ]
